# Official docs:
# - https://docs.github.com/en/actions
# - https://github.com/actions

name: Testing

env:
    # Enable colored output for pytest
    # https://github.com/pytest-dev/pytest/issues/7443
    # https://github.com/actions/runner/issues/241
    PY_COLORS: 1
    POETRY_VERSION: "1.4.0"

on:
    pull_request:
        types: [opened, reopened, synchronize]
    push:
        branches:
            - main

permissions:
    contents: read

# Limit concurrency by workflow/branch combination.
#
# For pull request builds, pushing additional changes to the
# branch will cancel prior in-progress and pending builds.
#
# For builds triggered on a branch push, additional changes
# will wait for prior builds to complete before starting.
#
# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
    python-tests:
        name: Python tests
        runs-on: ${{ matrix.os }}
        timeout-minutes: 10

        strategy:
            fail-fast: false
            matrix:
                os:
                    - ubuntu-latest
                python-version:
                    - "3.8"
                    - "3.9"
                    - "3.10"
                    - "3.11"
                    # - "3.12-dev"
                # include:
                #     # Run 3.12 tests with relaxed constraints
                #     - python-version: "3.12-dev"
                #       relax: true # ??

        steps:
            # https://github.com/actions/checkout
            - uses: actions/checkout@v5
              with:
                  persist-credentials: false
                  fetch-depth: 0

            # https://github.com/actions/setup-python
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Install Poetry
              run: |
                  pip install poetry==${{ env.POETRY_VERSION }}

            - name: Install packages
              run: |
                  make install

            # - name: Install coverage
            #   run: |
            #       bin/pip install coverage

            - name: List files
              run: |
                  ls -al bin/co*

            - name: Run tests with coverage
              run: |
                  make pytest-cov

            # https://github.com/codecov/codecov-action
            - name: "Upload coverage to Codecov"
              uses: codecov/codecov-action@v5
              with:
                  fail_ci_if_error: false # optional (default = false)
                  # files: var/html/coverage/coverage.xml, # optional
                  directory: var/html/coverage
                  flags: unittests # optional
                  token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
                  verbose: true # optional (default = false)
